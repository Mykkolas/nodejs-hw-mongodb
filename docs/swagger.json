{
    "openapi": "3.1.0",
    "info": {
        "version": "1.0.0",
        "title": "Contacts App",
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "description": "Best contact app in the world"
    },
    "servers": [
        {
            "url": "http://localhost:3000"
        },
        {
            "url": "https://nodejs-hw-mongodb-dlhi.onrender.com"
        }
    ],
    "tags": [
        {
            "name": "Contacts",
            "description": "Contacts operations."
        }
    ],
    "paths": {
        "/contacts": {
            "get": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Get list of contacts",
                "operationId": "getContacts",
                "description": "Get list of contacts with this endpoint",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "page",
                        "schema": {
                            "type": "integer",
                            "example": 1,
                            "default": 1
                        },
                        "description": "Page number"
                    },
                    {
                        "in": "query",
                        "name": "perPage",
                        "schema": {
                            "type": "integer",
                            "example": 10,
                            "default": 10
                        },
                        "description": "number of contacts per page"
                    },
                    {
                        "in": "query",
                        "name": "sortBy",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "name",
                                "phoneNumber",
                                "email"
                            ],
                            "example": "name",
                            "default": "_id"
                        },
                        "description": "Sort contacts by name"
                    },
                    {
                        "in": "query",
                        "name": "sortOrder",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "example": "desc",
                            "default": "asc"
                        },
                        "description": "Sort order"
                    },
                    {
                        "in": "query",
                        "name": "isFavourite",
                        "schema": {
                            "type": "boolean",
                            "example": true,
                            "default": false
                        },
                        "description": "Whether is contact in favourites"
                    },
                    {
                        "in": "query",
                        "name": "contactType",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "work",
                                "home",
                                "personal"
                            ],
                            "example": "home"
                        },
                        "description": "Type of contact"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully found contacts!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ],
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully found contacts!"
                                        },
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "data",
                                                "page",
                                                "perPage",
                                                "totalItems",
                                                "totalPages",
                                                "hasNextPage",
                                                "hasPreviousPage"
                                            ],
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/contact"
                                                    }
                                                },
                                                "page": {
                                                    "type": "number",
                                                    "example": 1
                                                },
                                                "perPage": {
                                                    "type": "number",
                                                    "example": 10
                                                },
                                                "totalItems": {
                                                    "type": "number",
                                                    "example": 4
                                                },
                                                "totalPages": {
                                                    "type": "number",
                                                    "example": 30
                                                },
                                                "hasNextPage": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "hasPreviousPage": {
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    }
                }
            },
            "post": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Create contact",
                "operationId": "createContact",
                "description": "Create a contact with payload",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "name",
                                    "phoneNumber",
                                    "contactType"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Contact's name",
                                        "type": "string",
                                        "example": "Maria Petrenko"
                                    },
                                    "phoneNumber": {
                                        "description": "Contact's phone number",
                                        "type": "string",
                                        "example": "380000000000"
                                    },
                                    "email": {
                                        "description": "Contact's email",
                                        "type": "string",
                                        "example": "myko@example.com"
                                    },
                                    "isFavourite": {
                                        "description": "Whether is contact in favourites",
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "contactType": {
                                        "description": "Type of contact",
                                        "type": "string",
                                        "enum": [
                                            "work",
                                            "home",
                                            "personal"
                                        ]
                                    },
                                    "photo": {
                                        "description": "Link to contact's photo",
                                        "type": "string",
                                        "format": "binary",
                                        "example": "https://res.cloudinary.com/drmscwucc/image/upload/v1740338500/xcu8tfhe01bpaobpzuon"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Contact successfully created!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ],
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully created a contact!"
                                        },
                                        "data": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/contact"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    }
                }
            }
        },
        "/contacts/{id}": {
            "get": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Get contact by id",
                "operationId": "getContact",
                "description": "Get Contact by id",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "65ca67e7ae7f10c88b598384"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get contact by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ],
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully found student with id 65ca67e7ae7f10c88b598384!"
                                        },
                                        "data": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/contact"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Update contact",
                "operationId": "patchContact",
                "description": "Update a contact with payload",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "67c1c98de88d76b8da43f1d5"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "description": "Contact's name",
                                        "type": "string",
                                        "example": "Myko Hvaratzgili"
                                    },
                                    "phoneNumber": {
                                        "description": "Contact's phone number",
                                        "type": "string",
                                        "example": "380000000008"
                                    },
                                    "email": {
                                        "description": "Contact's email",
                                        "type": "string",
                                        "example": "myko@example.com"
                                    },
                                    "isFavourite": {
                                        "description": "Whether is contact in favourites",
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "contactType": {
                                        "description": "Type of contact",
                                        "type": "string",
                                        "enum": [
                                            "work",
                                            "home",
                                            "personal"
                                        ]
                                    },
                                    "photo": {
                                        "description": "Link to contact's photo",
                                        "type": "string",
                                        "format": "binary",
                                        "example": "https://res.cloudinary.com/drmscwucc/image/upload/v1740338500/xcu8tfhe01bpaobpzuon"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Contact updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ],
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully patched a contact!"
                                        },
                                        "data": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/contact"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Delete contact",
                "operationId": "deleteContact",
                "description": "Delete contact by id",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "67c1c98de88d76b8da43f1d6"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer"
            }
        },
        "schemas": {
            "contact": {
                "type": "object",
                "required": [
                    "_id",
                    "name",
                    "phoneNumber",
                    "contactType",
                    "userId"
                ],
                "properties": {
                    "_id": {
                        "description": "Contact's id",
                        "type": "string",
                        "example": "65e4decdd286b30065d54af9"
                    },
                    "name": {
                        "description": "Contact's name",
                        "type": "string",
                        "example": "Myko Greeko"
                    },
                    "phoneNumber": {
                        "description": "Contact's phone number",
                        "type": "string",
                        "example": "0637548936"
                    },
                    "email": {
                        "description": "Contact's email",
                        "type": "string",
                        "example": "myko@example.com"
                    },
                    "isFavourite": {
                        "description": "Whether is contact in favourites",
                        "type": "boolean",
                        "example": false
                    },
                    "contactType": {
                        "description": "Type of contact",
                        "type": "string",
                        "enum": [
                            "work",
                            "home",
                            "personal"
                        ]
                    },
                    "photo": {
                        "description": "Link to contact's photo",
                        "type": "string",
                        "example": "https://res.cloudinary.com/drmscwucc/image/upload/v1740338500/xcu8tfhe01bpaobpzuon"
                    },
                    "userId": {
                        "description": "Contact's owner",
                        "type": "string",
                        "example": "67bb100d24ea148754208bb9"
                    }
                }
            }
        },
        "responses": {
            "401": {
                "description": "Unauthorized error",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "required": [
                                "status",
                                "message",
                                "data"
                            ],
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "example": 401
                                },
                                "message": {
                                    "type": "string",
                                    "example": "UnauthorizedError"
                                },
                                "data": {
                                    "type": "object",
                                    "required": [
                                        "message"
                                    ],
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Session not found"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "404": {
                "description": "NotFoundError",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "required": [
                                "status",
                                "message",
                                "error"
                            ],
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "example": 404
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Contact with this id was not found"
                                },
                                "error": {
                                    "type": "object",
                                    "required": [
                                        "message"
                                    ],
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Contact with id 67c1c98de88d76b8da43f1d5 was not found"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}